openapi: 3.0.3
info:
  title: Machine status API
  description: Helps to track status of networked machines.
  contact:
    name: Alex Ball
    url: https://polarweasel.org/
    email: awball@polarweasel.org
  version: "0.1"
servers:
- url: http://pi-hole4/machine-status
  description: Production server
security:
- authorization: []
tags:
- name: API info
  description: Information about the API itself
- name: Machine info
  description: "Information about a specific machine, or all machines"
paths:
  /machines:
    get:
      tags:
      - Machine info
      summary: Get status for all machines
      description: "Returns the status of all machines, or 404 if no machines have\
        \ reported status."
      operationId: getAllMachines
      responses:
        "200":
          description: Status info for all known machines
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MachineCollection"
        "404":
          description: Not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: 404
                type: https://example.com/docs/errors/not-found
                title: Not found
        default:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: 500
                title: Internal server error
  /machines/{machineId}:
    get:
      tags:
      - Machine info
      summary: Get status for a single machine
      description: "Returns the status of the specified machine, or 404 if the machine\
        \ is unknown."
      operationId: getMachine
      parameters:
      - name: machineId
        in: path
        description: |
          Unique identifier for a machine. This should be the machine's DNS name, optionally as a fully-qualified domain name (FQDN).

          (Nothing is stopping us from naming two machines the same thing, nor from providing other irritating names, but let's not make our lives difficult here.)
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[A-Za-z][A-Za-z0-9\\.-]+$"
          type: string
          description: Name of the machine
        examples:
          name_example:
            value: tiny-mines
          fqdn_example:
            value: tiny-mines.example.com
      responses:
        "200":
          description: Status info for a single machine
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Machine"
        "404":
          description: Not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: 404
                type: https://example.com/docs/errors/not-found
                title: Not found
        default:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: 500
                title: Internal server error
  /version:
    get:
      tags:
      - API info
      summary: Get API version
      description: Returns the current version of the API. Call this to verify the
        API is alive.
      operationId: APIVersion_list
      responses:
        "200":
          description: "Information about the API. Currently, this is just the version\
            \ string."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
        default:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: 500
                title: Internal server error
  /vibe:
    get:
      tags:
      - Machine info
      summary: Get the overall vibe
      description: |
        Returns overall status (happy, missing-machine, or oh-shit).

        If status is `happy`, the rest of the return object is empty.

        If status is `missing-machine` or `oh-shit`, the return object contains additional information about the failure condition.
      operationId: vibe_check
      responses:
        "200":
          description: The overall vibe of things
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
        default:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                status: 500
                title: Internal server error
components:
  schemas:
    Machine:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/MachineName"
        machineDescription:
          type: string
          description: Optional description of the machine (not useful in a small
            UI)
          nullable: true
        machineStatus:
          $ref: "#/components/schemas/Machine_machineStatus"
      example:
        machineStatus:
          loadAverages:
            load-15: 0.14658129805029452
            problemFlag: false
            load-5: 0.6027456183070403
            load-1: 0.08008281904610115
          diskFree:
            mountPoint: mountPoint
            freeSpace:
              problemFlag: false
              freeSpacePercentage: 59
        machineDescription: machineDescription
        name: tiny-mines
    MachineCollection:
      type: array
      description: Status info for one or more machines
      items:
        $ref: "#/components/schemas/Machine"
      x-schema-name: MachineCollection
    MachineName:
      pattern: "^[A-Za-z][A-Za-z0-9\\.-]+$"
      type: string
      description: Name of the machine
      example: tiny-mines
    LoadAverages:
      type: object
      properties:
        load-1:
          minimum: 0.0
          type: number
        load-5:
          minimum: 0.0
          type: number
        load-15:
          minimum: 0.0
          type: number
        problemFlag:
          type: boolean
          description: "True if this should be highlighted, false otherwise"
          default: false
      description: A machine's 1/5/15-minute load averages
      example:
        load-15: 0.14658129805029452
        problemFlag: false
        load-5: 0.6027456183070403
        load-1: 0.08008281904610115
    DiskFree:
      type: object
      properties:
        mountPoint:
          type: string
        freeSpace:
          $ref: "#/components/schemas/DiskFree_freeSpace"
      description: Free space on a machine's main mount of interest.
      example:
        mountPoint: mountPoint
        freeSpace:
          problemFlag: false
          freeSpacePercentage: 59
    ErrorResponse:
      required:
      - status
      - title
      type: object
      properties:
        type:
          type: string
          description: A reference that identifies the problem type.
          format: uri-reference
        title:
          type: string
          description: "A short, human-readable summary of the problem type."
        status:
          maximum: 599
          minimum: 100
          type: integer
          description: HTTP status code from the server.
        detail:
          type: string
          description: A human-readable message describing the error.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of
            the problem. It may or may not yield further information if dereferenced.
          format: uri-reference
      description: Error response for all methods.
    inline_response_200:
      type: object
      properties:
        version:
          type: string
          description: The API version
          example: 2024-11-04-preview
      example:
        version: 2024-11-04-preview
    inline_response_200_1:
      type: object
      properties:
        overall-vibe:
          type: string
          enum:
          - happy
          - missing-machine
          - oh-shit
      example:
        overall-vibe: happy
    Machine_machineStatus:
      type: object
      properties:
        loadAverages:
          $ref: "#/components/schemas/LoadAverages"
        diskFree:
          $ref: "#/components/schemas/DiskFree"
      example:
        loadAverages:
          load-15: 0.14658129805029452
          problemFlag: false
          load-5: 0.6027456183070403
          load-1: 0.08008281904610115
        diskFree:
          mountPoint: mountPoint
          freeSpace:
            problemFlag: false
            freeSpacePercentage: 59
    DiskFree_freeSpace:
      type: object
      properties:
        freeSpacePercentage:
          maximum: 100
          minimum: 0
          type: integer
          description: "Available disk space, as an integer percentage"
        problemFlag:
          type: boolean
          description: "True if this should be highlighted, false otherwise"
          default: false
      example:
        problemFlag: false
        freeSpacePercentage: 59
  responses:
    ApiInfo:
      description: "Information about the API. Currently, this is just the version\
        \ string."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200"
    Machine:
      description: Status info for a single machine
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Machine"
    MachineCollection:
      description: Status info for all known machines
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MachineCollection"
    VibeInfo:
      description: The overall vibe of things
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_1"
    NotFound:
      description: Not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            status: 404
            type: https://example.com/docs/errors/not-found
            title: Not found
    InternalServerError:
      description: Internal server error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            status: 500
            title: Internal server error
  parameters:
    machineId:
      name: machineId
      in: path
      description: |
        Unique identifier for a machine. This should be the machine's DNS name, optionally as a fully-qualified domain name (FQDN).

        (Nothing is stopping us from naming two machines the same thing, nor from providing other irritating names, but let's not make our lives difficult here.)
      required: true
      style: simple
      explode: false
      schema:
        pattern: "^[A-Za-z][A-Za-z0-9\\.-]+$"
        type: string
        description: Name of the machine
      examples:
        name_example:
          value: tiny-mines
        fqdn_example:
          value: tiny-mines.example.com
  securitySchemes:
    x-token:
      type: apiKey
      description: x-token header authentication
      name: x-token
      in: header
    authorization:
      type: http
      description: Bearer token authentication
      scheme: bearer
