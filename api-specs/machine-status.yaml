openapi: 3.0.3

info:
  title: Machine status API

  description: Helps to track status of networked machines.

  version: "0.1"

  contact:
    name: Alex Ball
    email: awball@polarweasel.org
    url: 'https://polarweasel.org/'

security: []

servers:
  - url: http://pi-hole4/machine-status
    description: Production server

tags:
  - name: API info
    description: Information about the API itself
  - name: Machine info
    description: Information about a specific machine, or all machines

paths:
  /machines:
    get:
      summary: Get status for all machines
      description: Returns the status of all machines, or 404 if no machines have reported status.
      tags:
        - Machine info
      operationId: getAllMachines
      responses:
        '200':
          $ref: '#/components/responses/MachineCollection'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/InternalServerError'

  /machines/{machineId}:
    get:
      summary: Get status for a single machine
      description: Returns the status of the specified machine, or 404 if the machine is unknown.
      tags:
        - Machine info
      operationId: getMachine
      parameters:
        - $ref: '#/components/parameters/machineId'
      responses:
        '200':
          $ref: '#/components/responses/Machine'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/InternalServerError'

    put:
      summary: Update the specified machine status
      description: Updates the status of the specified machine, creating a new record if this is a new machine.
      tags:
        - Machine info
      operationId: updateMachine
      parameters:
        - $ref: '#/components/parameters/machineId'
      requestBody:
        description: .
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Machine'
      responses:
        '201':
          description: Returns 201 on success with no response body
        '400':
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/InternalServerError'

  /:
    get:
      summary: Get API version
      description: Returns the current version of the API. Call this to verify the API is alive.
      tags:
        - API info
      operationId: APIVersion_list
      responses:
        '200':
          $ref: '#/components/responses/ApiInfo'
        default:
          $ref: '#/components/responses/InternalServerError'

  /vibe:
    get:
      summary: Get the overall vibe
      description: |
        Returns overall status (happy, missing-machine, or oh-shit).

        If status is `happy`, the rest of the return object is empty.

        If status is `missing-machine` or `oh-shit`, the return object contains additional information about the failure condition.
      tags:
        - Machine info
      operationId: vibe_check
      responses:
        '200':
          $ref: '#/components/responses/VibeInfo'
        default:
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    # TODO Add a real security scheme. This section is currently 100% boilerplate!
    x-token:
      name: x-token
      type: apiKey
      in: header
      description: x-token header authentication

    authorization:
      type: http
      scheme: bearer
      description: Bearer token authentication

  parameters:
    machineId:
      description: |
        Unique identifier for a machine. This should be the machine's hostname, optionally as a fully-qualified domain name (FQDN). Maximum length is 256 characters.

        (Nothing is stopping us from naming two machines the same thing, nor from providing other irritating names, but let's not make our lives difficult here.)
      name: machineId
      in: path
      required: true
      schema:
        type: string
        description: Name of the machine
        pattern: '^[A-Za-z][A-Za-z0-9\.-]+$'
        maxLength: 256
      examples:
        name_example:
          value: 'tiny-mines'
        fqdn_example:
          value: 'tiny-mines.example.com'

  responses:
    ApiInfo:
      description: Information about the API. Currently, this is just the version string.
      content:
        application/json:
          schema:
            type: object
            properties:
              version:
                description: The API version
                type: string
                example: 2024-11-04-preview

    Machine:
      description: Status info for a single machine
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Machine'

    MachineCollection:
      description: Status info for all known machines
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MachineCollection'

    VibeInfo:
      description: The overall vibe of things
      content:
        application/json:
          schema:
            type: object
            properties:
              overall-vibe:
                type: string
                enum:
                  - happy
                  - missing-machine
                  - oh-shit

    BadRequest:
      description: |
        Bad request.

        Something's not right in the data you're sending. Check the format of everything and try again.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            status: 400
            type: https://example.com/docs/errors/bad-request
            title: Bad request
            detail: 'machineStatus.diskFree.freeSpace.freeSpacePercentage: value out of range'

    NotFound:
      description: Not found.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            status: 404
            type: https://example.com/docs/errors/not-found
            title: Not found

    InternalServerError:
      description: Internal server error.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            status: 500
            title: Internal server error

  schemas:
    Machine:
      type: object
      required:
        - name
        - machineStatus
      properties:
        name:
          $ref: '#/components/schemas/MachineName'
        machineDescription:
          description: Optional description of the machine (not useful in a small UI)
          type: string
          nullable: true
        machineStatus:
          type: object
          properties:
            loadAverages:
              $ref: '#/components/schemas/LoadAverages'
            diskFree:
              $ref: '#/components/schemas/DiskFree'

    MachineCollection:
      description: Status info for one or more machines
      type: array
      items:
        $ref: '#/components/schemas/Machine'

    MachineName:
      type: string
      description: Name of the machine
      pattern: '^[A-Za-z][A-Za-z0-9\.-]+$'
      example: 'tiny-mines'

    LoadAverages:
      description: A machine's 1/5/15-minute load averages
      type: object
      properties:
        load-1:
          type: number
          minimum: 0.00
        load-5:
          type: number
          minimum: 0.00
        load-15:
          type: number
          minimum: 0.00
        problemFlag:
          description: True if this should be highlighted, false otherwise
          type: boolean
          default: false

    DiskFree:
      description: Free space on a machine's main mount of interest.
      type: object
      properties:
        mountPoint:
          type: string
        freeSpace:
          type: object
          properties:
            freeSpacePercentage:
              description: Available disk space, as an integer percentage
              type: integer
              minimum: 0
              maximum: 100
            problemFlag:
              description: True if this should be highlighted, false otherwise
              type: boolean
              default: false

    ErrorResponse:
      # RFC 9457 (supersedes 7807) defines the format of error responses.
      # https://datatracker.ietf.org/doc/rfc9457/

      description: Error response for all methods.
      type: object
      required:
        - status
        - title
      properties:
        type:
          description: A reference that identifies the problem type.
          type: string
          format: uri-reference
        title:
          description: A short, human-readable summary of the problem type.
          type: string
        status:
          description: HTTP status code from the server.
          type: integer
          minimum: 100
          maximum: 599
        detail:
          description: A human-readable message describing the error.
          type: string
        instance:
          description: A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
          type: string
          format: uri-reference
